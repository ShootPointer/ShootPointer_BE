name: Jacoco Test Coverage Check
on:
  pull_request:
    types: [opened, synchronize, reopened]
permissions: write-all

jobs:
  test:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:15
        ports:
          - 5432:5432
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: testdb
        options: >-
          --health-cmd="pg_isready -U postgres"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5

      redis:
        image: redis:7
        ports:
          - 6379:6379
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5

      elasticsearch:
        image: tkv00/elasticsearch-nori:7.17.9
        ports:
          - 9200:9200
        env:
          discovery.type: single-node
          xpack.security.enabled: "false"
          xpack.security.http.ssl.enabled: "false"
          ES_JAVA_OPTS: "-Xms256m -Xmx256m"
        options: >-
          --health-cmd "curl -s http://localhost:9200/_cluster/health?wait_for_status=yellow > /dev/null || exit 1"
          --health-interval=15s
          --health-timeout=10s
          --health-retries=30
          --health-start-period=90s

      mongo:
        image: mongo:6
        ports:
          - 27017:27017
        env:
          MONGO_INITDB_ROOT_USERNAME: root
          MONGO_INITDB_ROOT_PASSWORD: root
          MONGO_INITDB_DATABASE: shootpointer
        options: >-
          --health-cmd "mongosh --eval 'db.adminCommand({ ping: 1 })' --quiet || exit 1"
          --health-interval=10s
          --health-timeout=10s
          --health-retries=15
          --health-start-period=60s

    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Wait for Elasticsearch
        run: |
          echo "Waiting for Elasticsearch to be ready..."
          timeout 120 bash -c 'until curl -f http://localhost:9200/_cluster/health; do sleep 2; done'
          echo "Elasticsearch is ready!"
          curl -X GET "http://localhost:9200/_cluster/health?pretty"

      - name: Install MongoDB Shell
        run: |
          wget -qO - https://www.mongodb.org/static/pgp/server-6.0.asc | sudo apt-key add -
          echo "deb [ arch=amd64,arm64 ] https://repo.mongodb.org/apt/ubuntu jammy/mongodb-org/6.0 multiverse" | sudo tee /etc/apt/sources.list.d/mongodb-org-6.0.list
          sudo apt-get update
          sudo apt-get install -y mongodb-mongosh

      - name: Wait for MongoDB
        run: |
          echo "Waiting for MongoDB to be ready..."
          timeout 120 bash -c "until mongosh --host localhost --port 27017 -u root -p root --authenticationDatabase admin --eval 'db.adminCommand({ ping: 1 })' --quiet > /dev/null 2>&1; do echo 'Waiting...'; sleep 5; done"
          echo "MongoDB is ready!"
          mongosh --host localhost --port 27017 -u root -p root --authenticationDatabase admin --eval 'db.adminCommand({ ping: 1 })'