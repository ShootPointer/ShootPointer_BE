name: Jacoco Test Coverage Check
on:
  pull_request:
    types: [opened, synchronize, reopened]
permissions: write-all
jobs:
  test:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:15
        ports:
          - 5432:5432
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: testdb
        options: >-
          --health-cmd="pg_isready -U postgres"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5
      redis:
        image: redis:7
        ports:
          - 6379:6379
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5
          
      elasticsearch:
        image: tkv00/elasticsearch-nori:7.17.9
        ports:
          - 9200:9200
        env:
          discovery.type: single-node
          xpack.security.enabled: "false"
          xpack.security.http.ssl.enabled: "false"
          ES_JAVA_OPTS: "-Xms256m -Xmx256m"
        options: >-
          --health-cmd "curl -s http://localhost:9200/_cluster/health?wait_for_status=yellow > /dev/null || exit 1"
          --health-interval=15s
          --health-timeout=10s
          --health-retries=30
          --health-start-period=90s
      mongo:
        image: mongo:6
        ports:
          - 27017:27017
        env:
          MONGO_INITDB_DATABASE: shootpointer
        options: >-
          --health-cmd "mongosh --eval 'db.adminCommand({ ping: 1 })' || exit 1"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=10
          --health-start-period=30s
          
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'  
          java-version: '17'
      
      - name: Wait for Elasticsearch
        run: |
          echo "Waiting for Elasticsearch to be ready..."
          timeout 120 bash -c 'until curl -f http://localhost:9200/_cluster/health; do sleep 2; done'
          echo "Elasticsearch is ready!"
          curl -X GET "http://localhost:9200/_cluster/health?pretty"

      - name: Wait for MongoDB
        run: |
          echo "Waiting for MongoDB to be ready..."
          timeout 120 bash -c 'until mongosh --eval "db.adminCommand({ ping: 1 })" > /dev/null 2>&1; do sleep 2; done'
          echo "MongoDB is ready!"


      
      - name: Grant execute permission for gradlew
        run: chmod +x gradlew
      
      - name: Test with Gradle
        run: |
          ./gradlew clean test jacocoTestReport --info --stacktrace \
            -Dspring.elasticsearch.mode=external \
            -Dspring.elasticsearch.uris=http://localhost:9200
        env:
          SPRING_PROFILES_ACTIVE: test,es
          SPRING_DATASOURCE_URL: jdbc:postgresql://localhost:5432/testdb
          SPRING_DATA_MONGODB_URI: mongodb://localhost:27017/shootpointer
          SPRING_DATASOURCE_USERNAME: postgres
          SPRING_DATASOURCE_PASSWORD: postgres
          TESTCONTAINERS_RYUK_DISABLED: true
          SPRING_ELASTICSEARCH_MODE: external 
      
      - name: Upload JUnit Test Report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: junit-test-report
          path: build/reports/tests/test
      
      - name: Upload JaCoCo HTML Report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: jacoco-html-report
          path: build/reports/jacoco/test/html
      
      - name: Test Coverage Report
        id: jacoco
        uses: madrapps/jacoco-report@v1.7.1
        with:
          title: Test Coverage Report
          paths: ${{ github.workspace }}/build/reports/jacoco/test/jacocoTestReport.xml
          token: ${{ secrets.GITHUB_TOKEN }}
          min-coverage-overall: 30
          min-coverage-changed-files: 50
