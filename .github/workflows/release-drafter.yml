name: draft-release

on:
  pull_request:
    types: [closed]

permissions: write-all

jobs:
  check_labels:
    name: 'Check PR Labels'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: mheap/github-action-required-labels@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          mode: exactly
          count: 1
          labels: 'major,minor,patch'

  draft-release:
    name: 'Draft Gradle Release'
    runs-on: ubuntu-latest
    needs: check_labels

    steps:
      - uses: actions/checkout@v3

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '21'

      - name: Git config
        run: |
          git config --global user.name "${GITHUB_ACTOR}"
          git config --global user.email "${GITHUB_ACTOR}@users.noreply.github.com"

      # 버전 파일 추출 (Gradle 기준)
      - name: Get current version
        id: get_version
        run: |
          current_version=$(grep "^version" build.gradle | head -n 1 | cut -d"'" -f2)
          echo "Current version: $current_version"
          echo "version=$current_version" >> $GITHUB_OUTPUT

      # 버전 증가 로직 (Gradle용)
      - name: Bump version (major)
        if: contains(github.event.pull_request.labels.*.name, 'major')
        run: |
          ./gradlew versionBump -PreleaseType=major

      - name: Bump version (minor)
        if: contains(github.event.pull_request.labels.*.name, 'minor')
        run: |
          ./gradlew versionBump -PreleaseType=minor

      - name: Bump version (patch)
        if: contains(github.event.pull_request.labels.*.name, 'patch')
        run: |
          ./gradlew versionBump -PreleaseType=patch

      # 변경된 버전 읽기
      - name: Get new version
        id: new_version
        run: |
          new_version=$(grep "^version" build.gradle | head -n 1 | cut -d"'" -f2)
          echo "New version: $new_version"
          echo "version=$new_version" >> $GITHUB_OUTPUT

      # 커밋 및 푸시
      - name: Commit and Push
        run: |
          git add build.gradle
          git commit -m "🔖 Bump version to v${{ steps.new_version.outputs.version }}"
          git tag -a "v${{ steps.new_version.outputs.version }}" -m "Release v${{ steps.new_version.outputs.version }}"
          git push origin HEAD:${{ github.ref }}
          git push origin "v${{ steps.new_version.outputs.version }}"

      # Release Drafter (자동 릴리스 초안 생성)
      - name: Release drafter
        uses: release-drafter/release-drafter@v5
        with:
          config-name: release-drafter-config.yml
          version: 'v${{ steps.new_version.outputs.version }}'
          publish: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
